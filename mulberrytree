<<<<<<< HEAD

=======
>>>>>>> ec2efa128099612ac607cd34f48cbb5928770dfa
function echoy
{
   COL='\033[0;33m'; NC='\033[0m'; echo -e "${COL}$@${NC}";
}

function Help
 {
    echo
    echoy "   Produce publication-quality figures based on"
    echoy "   a newick tree file and user-defined group information"
    echo
    echoy "   Usage: mulberrytree [-h|t|g|c|x|s]"
    echo "   Options:
   -h     Print this help
   -t     Input tree in Newick format (required)
   -g     Group information in tsv format
            (Column 1: Leaf name; Column 2: Group name)
   -c     Color information in tsv format
            (Column 1: Group name; Column 2: R-readable color)
   -m     Midpoint root
   -o     Prefix for output files
   -w     Width for collapsed and uncollapsed PDF
   -W     Width for collapsed PDF
   -Y     Width for uncollapsed PDF
   -l     Interpret group name from leaf name
   -s     Separator for group interpretation from leaf (default: \"|\")
   -x     Text or regular expression to be ignored as leaf name suffix
   -i     Text or regular expression to be ignored as leaf name prefix
            when assessing group monophyly
   -T     Number of threads used for tree processing (default: 1)
            Note: optimal speed often reached with 1-2 threads

"
}


while getopts ":ht:g:c:ls:x:T:i:o:m:w:W:Y" option; do
   case $option in
      h) #Display Help
         Help
         exit;;
      t) # Tree filename
         TREEFILE=$OPTARG;;
      g) # Groups filename
         GROUPFILE=$OPTARG;;
      c) # Colors filename
         COLORFILE=$OPTARG;;
      l) # Interpret group from leaf names
         NAMESFROMLEAF=1;;
      s) # Separator for group interpretation
         SEPARATOR=$OPTARG;;
      x) # Suffix to be ignored in leaf names
         SUFFIX=$OPTARG;;
      i) # Ignore labels that start with prefix
         PREFIX=$OPTARG;;
      T) # Number of threads
         THREADS=$OPTARG;;
      o) # Output file prefix
         OUT=$OPTARG;;
      m) # Midpoint root
         MIDPOINT=1;;
      w) # Width for Collapsed and Uncollapsed PDF
         WIDTH=$OPTARG;;
      W) # Width for Collapsed PDF
         WIDTHCOL=$OPTARG;;
      Y) # Width for Collapsed PDF
         WIDTHUNCOL=$OPTARG;;
      \?) # Invalid option
         echo "Invalid option: -$OPTARG"
         exit 1
         ;;

   esac
done

if [[ ! $TREEFILE ]];
   then echo "Tree file is required"
   exit 1
fi

SCRIPTPATH=$( cd -- "$(dirname "$0")" >/dev/null 2>&1; pwd -P )

COMMAND=$( echo "Rscript $SCRIPTPATH/bin/mulberrytree.R tree=$TREEFILE")

if [[ $GROUPFILE ]];
   then COMMAND=$(echo "$COMMAND groups=$GROUPFILE")
fi

if [[ $COLORFILE ]];
   then COMMAND=$(echo "$COMMAND colors=$COLORFILE")
fi

if [[ $NAMESFROMLEAF ]];
   then COMMAND=$(echo "$COMMAND groupFromName=yes")
fi

if [[ $SEPARATOR ]];
   then COMMAND=$(echo "$COMMAND sep=$SEPARATOR")
fi

if [[ $SUFFIX ]];
   then COMMAND=$(echo "$COMMAND suffix=$SUFFIX")
fi

if [[ $PREFIX ]];
   then COMMAND=$(echo "$COMMAND ignorePrefix=$PREFIX")
fi

if [[ $THREADS ]];
   then COMMAND=$(echo "$COMMAND threads=$THREADS")
fi

if [[ $WIDTH ]];
   then COMMAND=$(echo "$COMMAND width=$WIDTH"),
fi

if [[ $WIDTHCOL ]];
   then COMMAND=$(echo "$COMMAND widthCol=$WIDTHCOL")
fi

if [[ $WIDTHUNCOL ]];
   then COMMAND=$(echo "$COMMAND widthUncol=$WIDTHUNCOL")
fi

if [[ $OUT ]];
   then COMMAND=$(echo "$COMMAND out=$OUT")
	OUTPRE=$OUT
else OUTPRE=$(echo $TREEFILE | perl -pe 's/\.(nwk|tree|treefile|tre)$//')
fi

OUTSUFCOL=mulberryCollapsed.nxs
OUTSUFUNCOL=mulberryUncollapsed.nxs

if [[ $MIDPOINT ]];
   then COMMAND=$(echo "$COMMAND midpoint=yes")
	OUTSUFCOL=mp-$OUTSUFCOL
	OUTSUFUNCOL=mp-$OUTSUFUNCOL
fi


$COMMAND


for f in $OUTPRE.$OUTSUFCOL $OUTPRE.$OUTSUFUNCOL; do
    perl -pe 's/-0.0/,0.0/g; s/-!/,!/g; s/_-(\d+)-\"/ ($1)\"/g' -i $f
    tmp=$(uuidgen)
    grep -v R-package $f > .mulberrytmp_$tmp
    cat .mulberrytmp_$tmp $SCRIPTPATH/bin/figtreeblock.txt > .mulberrytmp_$tmp\_2
    mv .mulberrytmp_$tmp\_2 $f
    rm .mulberrytmp_$tmp
done



exit 0;
